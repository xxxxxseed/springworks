<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- CustomAccessDeniedHandler를 빈으로 등록 -->
	<bean id="customAccessDenied" 
		class="com.cloud.security.CustomAccessDeniedHandler" />
	<!-- <bean id="customLoginSuccess" 
		class="com.cloud.security.CustomLoginSuccessHandler"/> -->
	<!-- <bean id="customPasswordEncoder"
		class="com.cloud.security.CustomNoOpPasswordEncoder"/> -->
	<!-- 패스워드 암호화 빈 등록 -->
	<bean id="bcryptPasswordEncoder" 
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<!-- CustomUser 빈 등록 -->
	<bean id="customUserDetailsService"
		class="com.cloud.security.CustomUserDetailsService" />

	<!-- 기본 서비스 -->
	<security:http>
		<security:intercept-url pattern="/sample/all" access="permitAll"/>
		<security:intercept-url pattern="/sample/member" 
			access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/sample/admin" 
			access="hasRole('ROLE_ADMIN')"/>
		
		<!-- <security:form-login/> -->
		<security:form-login login-page="/customLogin" />
		<!-- <security:form-login login-page="/customLogin" 
			authentication-success-handler-ref="customLoginSuccess"/> -->
		<!-- 로그아웃 -->
		<!-- <security:logout logout-url="/customLogout" invalidate-session="true"/> -->
		<!-- 에러 처리 -->
		<!-- <security:access-denied-handler error-page="/accessError" /> -->
		<security:access-denied-handler ref="customAccessDenied"/>
	</security:http>
	
	<!-- 인증 및 권한 설정 -->
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<!-- <security:jdbc-user-service data-source-ref="dataSource"/> -->
			<!-- <security:jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="select userid, userpw, enabled from
						tbl_member where userid=?"
				authorities-by-username-query="select userid, auth from
						tbl_member_auth where userid=?"
			/> -->
			
			<security:password-encoder ref="bcryptPasswordEncoder"/>
			
			<!-- <security:password-encoder ref="customPasswordEncoder"/> -->
			<!-- <security:user-service>
				<security:user name="member" password="{noop}member" 
					authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" 
					authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			</security:user-service> -->
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
